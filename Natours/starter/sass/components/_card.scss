.card {
  // perspective is needed to make a nicer rotation effect.
  // will look like the card is moving towards you.
  // The value must be large, otherwise will look weird.
  // If the value is too large, effect loses. Need to try out
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  // need to specify the height also on the card. Same height as on card__side.
  // after position absolute/relative was specified, we lost height value.
  // Without height perspective will not work
  height: 52rem;

  &__side {
    font-size: 2rem;
    height: 52rem;
    transition: all 0.8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    // hides the back part of the element
    backface-visibility: hidden;
    border-radius: 3px;
    // the image on the card overflows the parent, and corners are not shown as rounded -
    // () the above radius is overlaid with the card image
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);

    &--front {
      background-color: $color-white;
    }

    &--back {
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        );
      }

      &-2 {
        background-image: linear-gradient(
          to right bottom,
          $color-primary-light,
          $color-primary-dark
        );
      }

      &-3 {
        background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        );
      }
    }
  }

  // when we hover the card, we want side to transform
  &:hover &__side--front {
    transform: rotateY(-180deg);
  }

  &:hover &__side--back {
    transform: rotateY(0);
  }

  // front side styling
  &__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    // make clip-path work on different browsers.
    // always specify vendor prefix (-webkit) first
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    // to prevent overlay of images over rounded corners
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;

    &--1 {
      // here we have two backgrounds. One on top of another
      background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        ),
        // url is relative to css folder where we store compiled sass/css
        url(../img/nat-5.jpg);
    }
    &--2 {
      // url is relative to css folder where we store compiled sass/css
      background-image: linear-gradient(
          to right bottom,
          $color-primary-light,
          $color-primary-dark
        ),
        url(../img/nat-6.jpg);
    }
    &--3 {
      // url is relative to css folder where we store compiled sass/css
      background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        ),
        url(../img/nat-7.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
  }

  &__heading-span {
    padding: 1rem 1.5rem;
    // add nice paddin to both lines of the text. Do not treat the text as single line
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;

    &--1 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.85),
        rgba($color-secondary-dark, 0.85)
      );
      // url is relative to css folder where we store compiled sass/css
    }

    &--2 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.85),
        rgba($color-primary-dark, 0.85)
      );
      // url is relative to css folder where we store compiled sass/css
    }

    &--3 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-tertiary-light, 0.85),
        rgba($color-tertiary-dark, 0.85)
      );
      // url is relative to css folder where we store compiled sass/css
    }
  }

  &__details {
    padding: 3rem;
    ul {
      list-style: none;
      width: 80%;
      // center a block element inside a block element
      margin: 0 auto;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }
  }

  // Back card styling
  // cta - call to action
  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center;
  }

  &__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: $color-white;
  }

  &__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }
}
