body {
  /* properties related to font are inherited (except input elements).
       By setting fonts at the body level we pass them thru inheritance to children

    */
  font-family: "Lato", sans-serif;
  font-weight: 400;

  /* 1.7 times bigger than default */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /* at the end of the animation this element slightly moves. To prevent this, use below rule */
  /* during animation, if we rotate an element, at some point the back part will be shown. To prevent it,
  use this rule. This is the primary use for this rule. In this specific case it just helps with extra shake */
  backface-visibility: hidden;

  margin-bottom: 6rem;

  &--main {
    /* by default span is inline element 
         inline elements occupy only as much space as they need. Block elements occupy the entire width available and put 
         line breaks at the end
      */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* animation properties */
    animation-name: moveInLeft;
    animation-duration: 1s;

    /* wait 3 seconds before doing animation */
    /* animation-delay: 3s; */

    /* repeat animation 3 times */
    /* animation-iteration-count: 3; */

    /* speed at which animation takes place: 
       ease-in: start slow, and speed up at the end
       ease-out: start fast, finish slow.
    */
    animation-timing-function: ease-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;

    animation-name: moveInRight;
    animation-duration: 1s;
  }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  // by default div is a block and occupies the entire width. We want to stop the gradient where the text stops.
  display: inline-block;
  background-image: linear-gradient(
    to right,
    $color-primary-light,
    $color-primary-dark
  );
  // we want to put the gradient behind the text. Background will get clipped exactly where the text is.
  // so the gradient will only be visible where the text is
  // we do not want to see the text any more, but the background image, which will mimic the text
  -webkit-background-clip: text;

  letter-spacing: 0.2rem;
  color: transparent;
  transition: all 0.2s;

  &:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba($color-black, 0.2);
  }
}

.heading-terciary {
  font-size: $default-font-size;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: $default-font-size;

  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}
